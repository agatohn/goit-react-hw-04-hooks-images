{"version":3,"sources":["Components/searchForm/SearchForm.js","Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Services/pixabay-api.js","Components/imageGallery/ImageGallery.js","Components/modal/Modal.js","App.js","index.js"],"names":["SearchForm","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","toast","error","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","alt","onClick","urlLarge","src","api","fetchImg","q","page","split","join","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","onOpen","handlePageIncr","imgs","setImgs","setError","status","setStatus","fetchSetter","imgArr","errorSetter","useEffect","imgAPI","hits","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","message","map","img","largeImageURL","webformatURL","tags","id","color","height","width","timeout","modalRoot","querySelector","Modal","onClose","handleKeyDown","code","addEventListener","removeEventListener","createPortal","event","target","App","setPage","showModal","setShowModal","urlModal","setUrlModal","Number","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3094bbbc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nexport default function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState(\"\");\n\n  const handleQueryChange = (e) => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim() === \"\") {\n      toast.error(\"Введите поисковый запрос.\");\n      return;\n    }\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={handleQueryChange}\n          value={query}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({ url, alt, onClick, urlLarge }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(urlLarge)}\r\n        src={url}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  urlLarge: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","function fetchImg(q, page) {\n  const query = q.trim(\" \").split(\" \").join(\"+\");\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=23292771-6d1481bed529939f67189ab21&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`По запросу <<${q}>> изображений не найдено`)\n    );\n  });\n}\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;\n","import { useState, useEffect } from \"react\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\nimport imgAPI from \"../../Services/pixabay-api\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGallery({ query, page, onOpen, handlePageIncr }) {\r\n  const [imgs, setImgs] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  function fetchSetter(imgArr, status) {\r\n    setImgs(imgArr);\r\n    setStatus(status);\r\n  }\r\n  function errorSetter(error, status) {\r\n    setError(error);\r\n    setStatus(status);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    if (query !== \"\" && page === 1) {\r\n      setStatus(\"pending\");\r\n\r\n      imgAPI\r\n        .fetchImg(query)\r\n        .then(({ hits }) => {\r\n          if (hits[0]) {\r\n            return fetchSetter([...hits], \"resolved\");\r\n          }\r\n          toast.error(\"Такой картинки не существует.\");\r\n          setStatus(\"idle\");\r\n        })\r\n        .catch((error) => errorSetter(error, \"rejected\"));\r\n    }\r\n    if (page !== 1 && query !== \"\") {\r\n      setStatus(\"pending\");\r\n      imgAPI // eslint-disable-line\r\n        .fetchImg(query, page)\r\n        .then(({ hits }) => {\r\n          return fetchSetter([...imgs, ...hits], \"resolved\");\r\n        })\r\n        .catch((error) => errorSetter(error, \"rejected\"))\r\n        .finally(() =>\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          })\r\n        );\r\n    }\r\n  }, [page, query]);\r\n\r\n  return (\r\n    <>\r\n      {status === \"idle\" && (\r\n        <div className=\"Div\">Введите поисковый запрос.</div>\r\n      )}\r\n      {status === \"rejected\" && <div>Возникла ошибка: {error.message}</div>}\r\n      {(status === \"resolved\" || (status === \"pending\" && imgs)) && (\r\n        <ul className=\"ImageGallery\">\r\n          {imgs.map((img) => (\r\n            <ImageGalleryItem\r\n              urlLarge={img.largeImageURL}\r\n              url={img.webformatURL}\r\n              alt={img.tags}\r\n              key={img.id + img.webformatURL}\r\n              onClick={onOpen}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {status === \"resolved\" && (\r\n        <button onClick={handlePageIncr} className=\"Button\" type=\"button\">\r\n          Load More!\r\n        </button>\r\n      )}\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          className=\"Loader\"\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={20}\r\n          width={100}\r\n          timeout={1000}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n// }\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n  handlePageIncr: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClose, url }) {\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={url} alt=\"modal\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport SearchForm from \"./Components/searchForm/SearchForm\";\r\nimport ImageGallery from \"./Components/imageGallery/ImageGallery\";\r\nimport Modal from \"./Components/modal/Modal\";\r\n\r\nexport default function App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [urlModal, setUrlModal] = useState(\"\");\r\n\r\n  const handleFormSubmit = (q) => {\r\n    setQuery(q);\r\n    setPage(Number(1));\r\n  };\r\n\r\n  const handlePageIncr = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setUrlModal(\"\");\r\n  };\r\n\r\n  const handleImageClick = (url) => {\r\n    setUrlModal(url);\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm onSubmit={handleFormSubmit} />\r\n      {showModal && <Modal url={urlModal} onClose={closeModal} />}\r\n      <ImageGallery\r\n        query={query}\r\n        page={page}\r\n        onOpen={handleImageClick}\r\n        handlePageIncr={handlePageIncr}\r\n      />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}